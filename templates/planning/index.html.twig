{% extends 'base.html.twig' %}

{% block title %}Planning des Formations
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		/* Make entire page fill screen */
		html,
		body {
			height: 100%;
			margin: 0;
			padding: 0;
			overflow: hidden;
		}

		/* Sticky top navbar */
		/*.navbar {
position: sticky;
top: 0;
z-index: 1000;
background: white;
}*/

		/* Full-size planning area under navbar */
		.container-fluid {
			height: calc(100vh - 60px); /* Adjust 60px if your navbar height is different */
			width: 100vw;
			padding: 0;
			margin: 0;
			display: flex;
			flex-direction: column;
			overflow: hidden;
			height: 800px;
		}

		/* Outer container for Gantt diagram */
		.gantt-wrapper {
			flex: 1;
			display: flex;
			flex-direction: column;
			/*overflow: hidden;*/

		}

		/* Header that stays visible on vertical scroll */
		.gantt-scroll-body {
			flex: 1;
			overflow: auto;
			cursor: grab;
			position: relative;

			/* Hide scrollbars but keep scroll functionality */
			scrollbar-width: none; /* Firefox */
			-ms-overflow-style: none; /* IE 10+ */
		}

		.gantt-scroll-body::-webkit-scrollbar {
			display: none; /* Chrome/Safari/Edge */
		}

		.gantt-header {

			overflow: auto;
			cursor: grab;
			/*position: sticky;*/
			position: relative;
			top: 0;
			background: white;
			z-index: 0;

			border-bottom: 2px solid #ccc;

			/* Enable horizontal scroll */
			overflow-x: auto;
			overflow-y: hidden;
			white-space: nowrap;

			/* Hide scrollbars */
			scrollbar-width: none; /* Firefox */
			-ms-overflow-style: none; /* IE 10+ */
		}

		.gantt-header::-webkit-scrollbar {
			display: none; /* Chrome/Safari/Edge */
		}

		.gantt-container {
			position: relative;
			min-width: 2000px; /* Ensures horizontal scroll space */
			min-width: calc(7 * 52*30px);
		}

		/* Timelines (years/months/weeks/stagiaires) */


		.timeline-total-stagiaires {
			display: flex;
			height: 20px;
			border-top: 1px solid black;
			width: 8820px;
		}

		.timeline-months {
			display: flex;
			height: 20px;
			border-top: 2px solid black;
			width: 8300px;
			justify-content: center;
			font-family: }


		/* Add this for the timeline area */
		.timeline-area {
			position: relative;
			height: 40px;
			margin-left: 250px;
			min-width: calc(100% - 250px);
		}


		.timeline-years {

			display: flex;
			height: 25px;
			border-top: 2px solid black;
			width: 10500px;
			/*align-items: center;*/
			justify-content: center;
		}


		.timeline-weeks {
			display: flex;
			height: 20px;

		}

		.timeline-active-stagiaires {
			border-bottom: 2px solid #23395d;
			display: flex;
			height: 20px;
			border-top: 1px solid;
			width: 8500px;
			border-right: 1px solid black;

		}

		/* Year block spans entire year */
		.year-column {
			font-weight: bold;
			background: #f8f9fc;
			border-top: 3px solid #23395d;
			border-right: 1px solid black;
			display: flex;
			align-items: center;
			justify-content: center;
			min-width: 0; /* 52 weeks × 30px */
		}

		.month-column {
			min-width: 99px;
			font-size: 12px;
			border: 1px solid #999;
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.week-column,
		.stagiaires-column {
			min-width: 23px;
			font-size: 10px;
			/*border-right: 1px solid #eee;*/
			display: flex;
			align-items: center;
			justify-content: center;
			height: ;
			border-right: 1px solid black;
		}
		.stagiaires-column {
			;
			/*border-top: 3px solid #23395d;*/
		}

		/* Sticky left column for formation names */
		.formation-name {
			position: sticky;
			left: 0;
			background: white;
			font-size: 15px;
			font: bold;
			z-index: 10;
			width: 250px;
			border-right: 1px solid #ddd;
			padding-left: 5px;
			font-weight: bold;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

		/* Gantt bars */
		.formation-bar:hover {
			z-index: 10;
			box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
		}

		.formation-bar.validated {
			opacity: 0.9;
		}

		.entreprise-period {
			position: absolute;
			height: 10px;
			background-color: #f6c23e;
			border-radius: 2px;
			z-index: 1;
		}

		.formation-pending {
			background-color: orange;
		}

		/* Interruptions */
		.interruption {
			position: absolute;
			height: 30px;
			background-color: #e74a3b;
			opacity: 0.7;
			z-index: 3;
		}


		/* Markers */
		.holiday-marker,
		.today-marker {
			position: absolute;
			top: 0;
			height: 100%;
			width: 2px;
			z-index: 5;
		}

		.holiday-marker {
			position: absolute;
			top: 0;
			width: 2px;
			height: 100%;
			background-color: red;
			z-index: 4;
		}

		.today-marker {
			background-color: blue;
			height: 800px;
			margin-top: 0;
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container-fluid">
		<h1 class="h3 mb-4 text-gray-800 text-center">Planning des Formations</h1>

		<div class="gantt-wrapper">
			<div
				class="gantt-header">
				{# <div class="timeline-years">
																	{% for year, weeks in yearly_weeks %}
																		<div class="year-column" style="width: {{ weeks * 7 * day_width }}px">{{ year }}</div>
																	{% endfor %}
																</div> #}

				<div class="timeline-months">
					{% for month in months %}
						{% set monthParts = month|split('-') %}
						{# {% set daysInMonth = date_service.getDaysInMonth(monthParts[1], monthParts[0]) %} #}
						{# <div class="month-column" style="width: {{ daysInMonth * day_width }}px"> #}
					{{ monthParts[1]|month_name_fr }}
				</div>
			{% endfor %}
			</div>

				<div class="timeline-weeks"> {% for week in all_weeks %}
					<div class="week-column" style="width: {{ 7 * day_width }}px">
						S{{ week.number }}
					</div>
				{% endfor %}
			</div>

			<div class="timeline-total-stagiaires">
				{% for week in all_weeks %}
					<div class="stagiaires-column" style="width: {{ 7 * day_width }}px">
						{{ week.total_stagiaires ?? '' }}
					</div>
				{% endfor %}
			</div>
			<div class="timeline-active-stagiaires">
				{% for week in all_weeks %}
					<div class="stagiaires-column" style="width: {{ 7 * day_width }}px">
						{{ week.active_stagiaires ?? '' }}
					</div>
				{% endfor %}
			</div>
		</div>

		<div class="gantt-scroll-body" id="gantt-body">
			{% for group, formations in grouped_formations %}
				<div class="gantt-group" data-group="{{ group }}">
					{% for formation in formations %}
						<div class="gantt-row" data-formation-id="{{ formation.id }}">
							<div class="formation-name">{{ formation.nom }}
								({{ formation.niveau }})</div>

							<div
								class="timeline-area">
								{# Main Formation Bar #}
								<div class="formation-bar" data-start="{{ formation.dateDebut|date('Y-m-d') }}" data-end="{{ formation.dateFin|date('Y-m-d') }}" data-state="{{ formation.etat }}" data-grn="{{ formation.groupeRattachement }}">
									<div class="bar-content">
										{{ formation.nom }}<br>
										{{ formation.nombreHeures }}h | Niv.
										{{ formation.niveau }}
									</div>
								</div>

								{# Enterprise Periods #}
								{% for periode in formation.periodEnEntreprises %}
									<div class="entreprise-period" data-start="{{ periode.dateDebut|date('Y-m-d') }}" data-end="{{ periode.dateFin|date('Y-m-d') }}"></div>
								{% endfor %}

								{# Interruptions #}
								{% for interruption in formation.interruptions %}
									<div class="interruption" data-start="{{ interruption.dateDebut|date('Y-m-d') }}" data-end="{{ interruption.dateFin|date('Y-m-d') }}"></div>
								{% endfor %}
							</div>
						</div>
					{% endfor %}
				</div>
			{% endfor %}

			{# Holidays #}
			{% for holiday in holidays %}
				<div class="holiday-marker" data-start="{{ holiday.date|date('Y-m-d') }}" title="Jour férié: {{ holiday.nom }} ({{ holiday.date|date('d/m/Y') }})"></div>
			{% endfor %}
		</div>
	</div>
</div></div>{% endblock %}{% block javascripts %}{{ parent() }}<script>
document.addEventListener('DOMContentLoaded', function () { // Configuration
const config = {
dayWidth: {{ day_width }},
rowHeight: 40,
barHeight: 30,
startDate: new Date('{{ start_date|date('Y-m-d') }}'),
endDate: new Date('{{ end_date|date('Y-m-d') }}'),
colors: {
'GRN1': '#4e73df',
'GRN2': '#1cc88a',
'GRN3': '#36b9cc',
'default': '#858796',
'validated': '#28a745',
'pending': '#fd7e14',
'interruption': '#e74a3b',
'entreprise': '#f6c23e',
'holiday': '#dc3545'
}
};

// Initialize timeline
const timelineDuration = dateDiffInDays(config.startDate, config.endDate);
document.querySelector('.gantt-container').style.width = `${
timelineDuration * config.dayWidth
}px`;

// Position all elements
positionAllElements();
setupScrollSync();

function positionAllElements() {
positionFormationBars();
positionEnterprisePeriods();
positionInterruptions();
positionHolidayMarkers();
positionTodayMarker();
}

function positionFormationBars() {
document.querySelectorAll('.formation-bar').forEach(bar => {
const startDate = new Date(bar.dataset.start);
const endDate = new Date(bar.dataset.end);

const daysFromStart = dateDiffInDays(config.startDate, startDate);
const durationDays = dateDiffInDays(startDate, endDate) + 1;

bar.style.left = `${
daysFromStart * config.dayWidth
}px`;
bar.style.width = `${
durationDays * config.dayWidth
}px`;

// Apply color based on GRN
const grn = bar.dataset.grn || 'default';
bar.style.backgroundColor = config.colors[grn] || config.colors.default;

// Add validation state
if (bar.dataset.state === 'validée') {
bar.classList.add('validated');
}
});
}

function positionEnterprisePeriods() {
document.querySelectorAll('.entreprise-period').forEach(period => {
const startDate = new Date(period.dataset.start);
const endDate = new Date(period.dataset.end);

const daysFromStart = dateDiffInDays(config.startDate, startDate);
const durationDays = dateDiffInDays(startDate, endDate) + 1;

period.style.left = `${
daysFromStart * config.dayWidth
}px`;
period.style.width = `${
durationDays * config.dayWidth
}px`;
period.style.top = `${
config.barHeight + 5
}px`;
});
}

function positionInterruptions() {
document.querySelectorAll('.interruption').forEach(interruption => {
const startDate = new Date(interruption.dataset.start);
const endDate = new Date(interruption.dataset.end);

const daysFromStart = dateDiffInDays(config.startDate, startDate);
const durationDays = dateDiffInDays(startDate, endDate) + 1;

interruption.style.left = `${
daysFromStart * config.dayWidth
}px`;
interruption.style.width = `${
durationDays * config.dayWidth
}px`;
});
}

function positionHolidayMarkers() {
document.querySelectorAll('.holiday-marker').forEach(marker => {
const date = new Date(marker.dataset.date);
const daysFromStart = dateDiffInDays(config.startDate, date);

marker.style.left = `${
daysFromStart * config.dayWidth
}px`;
});
}

function positionTodayMarker() {
const today = new Date();
if (today >= config.startDate && today <= config.endDate) {
const marker = document.createElement('div');
marker.className = 'today-marker';
marker.style.left = `${
dateDiffInDays(config.startDate, today) * config.dayWidth
}px`;
document.querySelector('.gantt-container').appendChild(marker);
}
}

function setupScrollSync() {
const ganttBody = document.querySelector('.gantt-scroll-body');
const ganttHeader = document.querySelector('.gantt-header');

ganttBody.addEventListener('scroll', () => {
ganttHeader.scrollLeft = ganttBody.scrollLeft;
});
}

// Helper functions
function dateDiffInDays(a, b) {
const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());
return Math.floor((utc2 - utc1) / (1000 * 60 * 60 * 24));
}
});</script>{% endblock %}
